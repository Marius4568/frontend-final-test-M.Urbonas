{"mappings":"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","sources":["src/js/asyncFunctions.js","src/js/dashboard.js"],"sourcesContent":["export const asyncFunctions = {\r\n  getData: async function (url) {\r\n    try {\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n\r\n      return data;\r\n    } catch (err) {\r\n      return err.message;\r\n    }\r\n  },\r\n\r\n  postPersonData: async function (url, dataObject) {\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          data: {\r\n            first_name: dataObject.first_name,\r\n            last_name: dataObject.last_name,\r\n            email: dataObject.email,\r\n            country: dataObject.country,\r\n            activities: dataObject.activities,\r\n          },\r\n        }),\r\n      });\r\n\r\n      return response.json();\r\n    } catch (err) {\r\n      return err.message;\r\n    }\r\n  },\r\n\r\n  deletePersonData: async function (id) {\r\n    try {\r\n      const res = await fetch(`http://18.193.250.181:1337/api/people/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      const data = await res.json();\r\n\r\n      return data;\r\n    } catch (err) {\r\n      return err.message;\r\n    }\r\n  },\r\n};\r\n\r\nexport const dashboardAsyncFunctions = {\r\n  getAllPeopleFromDB: async function () {\r\n    try {\r\n      const data = await asyncFunctions.getData(\r\n        `http://18.193.250.181:1337/api/people?&pagination[pageSize]=100&populate=*`\r\n      );\r\n\r\n      let array = [];\r\n      for (let page = 1; array.length < data.meta.pagination.total; page++) {\r\n        const data = await asyncFunctions.getData(\r\n          `http://18.193.250.181:1337/api/people?&pagination[pageSize]=100&pagination[page]=${page}&populate=*`\r\n        );\r\n        data.data.forEach((el) => array.push(el));\r\n      }\r\n      return array;\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  },\r\n\r\n  updateUncapitalizedNames: async function () {\r\n    let array = await dashboardAsyncFunctions.getAllPeopleFromDB();\r\n    array = array.map((el) => [\r\n      el.attributes.first_name,\r\n      el.attributes.last_name,\r\n    ]);\r\n    array = array.filter(\r\n      (el) =>\r\n        el[0][0] !== el[0][0].toUpperCase() ||\r\n        el[1][0] !== el[1][0].toUpperCase()\r\n    );\r\n    document.querySelector(\".not-capitalized-names\").textContent = array.length;\r\n  },\r\n\r\n  updateSignupCountries: async function () {\r\n    let array = await dashboardAsyncFunctions.getAllPeopleFromDB();\r\n    let uniqueCountries = [];\r\n    array.forEach((el) => {\r\n      const shortcut = el.attributes.country.data;\r\n      if (shortcut) {\r\n        if (!uniqueCountries.includes(shortcut.attributes.country)) {\r\n          uniqueCountries.push(shortcut.attributes.country);\r\n        }\r\n      }\r\n    });\r\n    document.querySelector(\".signup-countries\").textContent =\r\n      uniqueCountries.length;\r\n  },\r\n\r\n  updateTotalSignups: async function () {\r\n    try {\r\n      let signups = document.querySelector(\".signups\");\r\n      const data = await asyncFunctions.getData(\r\n        \"http://18.193.250.181:1337/api/people?&pagination[pageSize]=10&populate=country\"\r\n      );\r\n      signups.textContent = data.meta.pagination.total;\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  },\r\n\r\n  fillSelectCountryElem: async function (selectElem) {\r\n    let options = ``;\r\n    const countries = await asyncFunctions.getData(\r\n      \"http://18.193.250.181:1337/api/countries\"\r\n    );\r\n\r\n    if (countries.error) {\r\n      console.log(\r\n        `Error ${countries.error.status}: ${countries.error.message}. Couldn't load countries`\r\n      );\r\n    } else if (countries.data.length < 1) {\r\n      alert(`Empty array, no country data found.`);\r\n    } else {\r\n      countries.data.forEach((el) => {\r\n        options += `<option data-id =${el.id} value=${el.attributes.country}>${el.attributes.country}</option>`;\r\n      });\r\n    }\r\n\r\n    selectElem.innerHTML =\r\n      '<option data-id =\"\" value=\"All countries\">All countries</option>' +\r\n      options;\r\n  },\r\n};\r\n","import { asyncFunctions, dashboardAsyncFunctions } from \"./asyncFunctions\";\r\n\r\nconst searchField = document.querySelector(\"input[type='search']\");\r\nconst countrySelect = document.querySelector(\".country-select\");\r\nconst peopleInfo = document.querySelector(\".people-info-fields\");\r\n\r\n//fill the countrySelect element with options\r\ndashboardAsyncFunctions.fillSelectCountryElem(countrySelect);\r\n//fill the visitors card by a random number between 5000 and 10000\r\ndocument.querySelector(\".visitors\").textContent = Math.floor(\r\n  Math.random() * (10000 - 5000 + 1) + 5000\r\n);\r\n//fill the total signups field\r\ndashboardAsyncFunctions.updateTotalSignups();\r\n//fill the signup countries field\r\ndashboardAsyncFunctions.updateSignupCountries();\r\n//fill the uncapitalized names field\r\ndashboardAsyncFunctions.updateUncapitalizedNames();\r\n//Add event listener to the search field\r\nsearchField.addEventListener(\"keyup\", (ev) => {\r\n  if (ev.target.value.length > 0) {\r\n    const searchVals = collectPeopleSearchInputs();\r\n    const query = buildPeopleSearchQuery(searchVals[0], searchVals[1]);\r\n    displayPeople(query);\r\n  } else {\r\n    displayPeople(\r\n      \"http://18.193.250.181:1337/api/people?&pagination[pageSize]=10&populate=country\"\r\n    );\r\n  }\r\n  ev.currentTarget.value;\r\n});\r\n//Add event listener to the country select field\r\ncountrySelect.addEventListener(\"change\", (ev) => {\r\n  const searchVals = collectPeopleSearchInputs();\r\n  const query = buildPeopleSearchQuery(searchVals[0], searchVals[1]);\r\n  displayPeople(query);\r\n});\r\n\r\n//Function to display people on the page\r\nasync function displayPeople(url) {\r\n  try {\r\n    const data = await asyncFunctions.getData(url);\r\n\r\n    peopleInfo.innerHTML = \"\";\r\n\r\n    data.data.forEach((el) => {\r\n      peopleInfo.innerHTML += `\r\n    <div class=\"person-field\">\r\n    <div class=\"initialsContactInfo\">\r\n      <div class=\"initials\">${\r\n        el.attributes.first_name[0] + el.attributes.last_name[0]\r\n      }</div>\r\n      <div class=\"contact-info\">\r\n        <p>${el.attributes.first_name + \" \" + el.attributes.last_name}</p>\r\n        <span>${el.attributes.email}</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"country\">${\r\n      el.attributes.country.data\r\n        ? el.attributes.country.data.attributes.country\r\n        : \"No Country\"\r\n    }</div>\r\n  </div>`;\r\n    });\r\n  } catch (err) {\r\n    console.log(err.message);\r\n  }\r\n}\r\n\r\n//Functions that help to get search inputs and formulate search query/////////////////////////\r\nfunction buildPeopleSearchQuery(searchVal, countryID) {\r\n  let query =\r\n    \"http://18.193.250.181:1337/api/people?&pagination[pageSize]=10&populate=*\";\r\n\r\n  if (countryID) {\r\n    query += `&filters[country][id][$eq]=${countryID}`;\r\n  }\r\n  if (searchVal) {\r\n    query += `&filters[$or][0][first_name][$containsi]=${searchVal}&filters[$or][1][last_name][$containsi]=${searchVal}`;\r\n  }\r\n\r\n  return query;\r\n}\r\n\r\nfunction collectPeopleSearchInputs() {\r\n  return [\r\n    searchField.value,\r\n    countrySelect.options[countrySelect.selectedIndex].dataset.id,\r\n  ];\r\n}\r\n/////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n//initialize people info list\r\ndisplayPeople(\r\n  \"http://18.193.250.181:1337/api/people?&pagination[pageSize]=10&populate=*\"\r\n);\r\n\r\n//sample search for a specific country with the name containing something or the surname containing something\r\n//http://18.193.250.181:1337/api/people?populate=*&filters[country][id][$eq]=7&filters[$or][0][first_name][$containsi]=ll&filters[$or][1][last_name][$containsi]=o\r\n"],"names":["$718a3d42874f4c6e$export$a910b454b0ebf7f1","async","url","res","fetch","json","err","message","$718a3d42874f4c6e$export$9e99503a8aeb043b","getAllPeopleFromDB","data","array","page","length","meta","pagination","total","forEach","el","push","console","log","updateUncapitalizedNames","map","attributes","first_name","last_name","filter","toUpperCase","document","querySelector","textContent","updateSignupCountries","uniqueCountries","shortcut","country","includes","updateTotalSignups","signups","fillSelectCountryElem","selectElem","options","countries","error","status","alert","id","innerHTML","$67a5a6eb45574699$var$searchField","$67a5a6eb45574699$var$countrySelect","$67a5a6eb45574699$var$peopleInfo","$67a5a6eb45574699$var$displayPeople","email","$67a5a6eb45574699$var$buildPeopleSearchQuery","searchVal","countryID","query","Math","floor","random","addEventListener","ev","target","value","searchVals","$67a5a6eb45574699$var$collectPeopleSearchInputs","currentTarget"],"version":3,"file":"dashboard.16f7e0c7.js.map"}